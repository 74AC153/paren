add unit tests for parse and eval:

()
a
(())
(a)
(a ())
(() a)
(a . ())
(() . a)

(a b)
(b a)
(a . b)
(b . a)

(a (b))
((b) a)
(a . (b))
((b) . a)

((a) (b))
((b) (a))
((a) . (b))
((b) . (a))

(eq () (quote (())))
(lambda (x) (car x))
(label next (lambda (x) (car (cdr x))))

add operators:

+
-
*
/
%

<<
>>
->>
|
&
^
~

<
>
<=
>=
!=

&&
||
!

add string tokenizer pass
add quote parse pass

variadic functions?:
(lambda (foo &rest bar)) ?
(lambda all-args all-args) and (lambda (first-arg second-arg . other-args) ?

macros

tail call elimination
-- requires rewrite of eval to be non-recursive
call/cc?

reduce number of retain/releases by using _noref more often

move builtins into evaluator

create native builtin node types

switch to slist to reduce code size
